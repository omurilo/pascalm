name: Bison Flex Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y flex gcc libfl-dev bison

    - name: Find and test all Flex/Bison modules
      run: |
        find exercises/bison/ -type f \( -name "*.lex" -or -name "*.l" -or -name "*.y" \) -exec dirname {} \; | sort -u | while read module; do
          echo "Testing module: $module"

          mkdir -p $HOME/bison_build

          lfiles=$(find "$module" -maxdepth 1 \( -name "*.l" -or -name "*.lex" \))
          yfiles=$(find "$module" -maxdepth 1 \( -name "*.y" \))

          if [ -z "$lfiles" ] || [ -z "$yfiles" ]; then
            echo "No .l or .lex or .y files found in module $module, skipping this module."
            continue
          fi

          filename=$(echo $yfiles | rev | cut -d '/' -f 1 | rev | cut -d '.' -f 1)

          echo "build bison files"
          bison -d $yfiles -o $filename.tab.c
          echo "builind flex filex"
          flex $lfiles
          
          if [ ! -f "lex.yy.c" ] || [ ! -f "$filename.tab.c" ]; then
            echo "lex.yy.c or $filename.tab.c not generated, skipping this module."
            continue
          fi

          echo "build g++ -o $HOME/bison_build/parser"
          g++ -I $module -o $HOME/bison_build/parser lex.yy.c $filename.tab.c

          echo "Files:"
          ls -la .
          echo "removing lex.yy.c $filename.tav.c $filename.tab.h"
          rm -rf lex.yy.c $filename.tab.c $filename.tab.h

          input_file=$(find "$module" -maxdepth 1 \( -name "*.test.txt" \))
          expected_output=$(find "$module" -maxdepth 1 \( -name "*.output.txt" \))

          if [ ! -f "$input_file" ] || [ ! -f "$expected_output" ]; then
            echo "Test files not found in module $module, skipping this module."
            continue
          fi

          echo "Exex parser with $input_file"
          $HOME/bison_build/parser < "$input_file" > $HOME/bison_build/output.txt

          diff $HOME/bison_build/output.txt "$expected_output" || exit 1
        done

    - name: Check test results
      run: |
        if [ $? -eq 0 ]; then
          echo "All tests passed!"
        else
          echo "Test failed!"
          exit 1
        fi

