program TesteParser (input, output);

{ Declaração de labels }
label 100, 200, 300;

{ Declaração de constantes }
const
  MAX = 5;
  MIN = 1;

{ Declaração de tipos }
type
  TAluno = record
    nome: string;
    nota: integer;
  end;

{ Declaração de variáveis }
var
  i, soma: integer;
  alunos: array[MIN..MAX] of TAluno;
  opt: integer;
  resultado: real;
  str: string;

{ Função simples }
function Dobro(x: integer): integer;
begin
  Dobro := x * 2;
end;
{ Função que recebe função }
function AplicarOperacao(x, y: real; 
                        function op(a, b: real): real): real;
forward;

{ Função que é passada como parâmetro de outra função }
function Multiplicar(a, b: real): real;
begin
    Multiplicar := a * b;
end;

{ Procedimento simples }
procedure ImprimeAluno(a: TAluno);
begin
  write(a.nome, ': ', a.nota);
end;

{ Procedure que recebe procedure }
procedure ExecutarOperacao(x, y: integer; 
                           procedure operacao(a, b: integer));
begin
    operacao(x, y);
end;

{ Procedure que é passada como parâmetro para outra procedure }
procedure Somar(a, b: integer);
begin
    writeln(a + b);
end;

function AplicarOperacao(x, y: real; 
                        function op(a, b: real): real): real;
begin
    AplicarOperacao := op(x, y);
end;

function Chr(n: integer): char;
begin
  Chr := n;
end;

begin
  { Inicializa }
  soma := 0;
  for i := MIN to MAX do
  begin
    alunos[i].nome := 'Aluno' + Chr(48 + i);
    alunos[i].nota := i * 10;
    soma := soma + alunos[i].nota;
  end;

  for i := MAX downto MIN do
  begin
    writeln(i);
  end;

  { Testa função }
  opt := Dobro(soma);

  { Testa função com parâmetro de função }
  resultado := AplicarOperacao(4.5, 2.0, Multiplicar);
  writeln(resultado);

  { Testa procedure com parâmetro de procedure }
  ExecutarOperacao(5, 3, Somar);

  { Testa case }
  case opt of
    100: write('Total x2 = 100');
    50: write('Total /2 = 50');
  else
    write('Total x2 = ', opt);
  end;

  writeln;
  ExecutarOperacao;
  write('Imprimindo lista de alunos:');
  writeln;
  
  { Testa while }
  i := 1;
  while i <= MAX do
  begin
    ImprimeAluno(alunos[i]);
    writeln;
    i := i + 1;
  end;
  
  { Testa repeat }
  repeat
    write('Digite 0 para sair: ');
    read(opt);
  until opt = 0;
end.
